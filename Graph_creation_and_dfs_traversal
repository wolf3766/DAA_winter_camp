//graph implementation using maps in c++;

#include<bits/stdc++.h>
#define ll long long
using namespace std;


class Graph{
public:
  map<int,bool>visited;
  map<int,vector<int>>adj;

  void dfs(int v);
  void addEdge(int s,int e);
};

void Graph::dfs(int v){
  visited[v]=true;
  cout<<v<<" ";
  for(auto i:adj[v]){
    if(!visited[i]){
      dfs(i);
    }
  }
}

void Graph::addEdge(int s,int e){
  adj[s].push_back(e);
}


int main(){
   
    Graph g;
    g.addEdge(0, 1);
    g.addEdge(0, 2);
    g.addEdge(1, 2);
    g.addEdge(2, 0);
    g.addEdge(2, 3);
    g.addEdge(3, 3);
   

    g.dfs(2);

    return 0;
}
